When would you want to use a remote repository rather than keeping all your work
local?

    - As a backup of my local repository
    - To share my work with the rest of the world!
    - For sharing a project with among team members
    - To be able to work from several computers or locations (home/work/school)

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If Git were pushing and pulling new files everytine a local commit
    is done, it would be a nightmare in a collaborative environment!
    Imagine a project for which 15 developers work togthere. After each
    local commit, the 14 other people would be force to interrupt their
    working flow to update their repositories and deal with whatever
    conflit occured. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    - A fork is a cloning process from server to server on GitHub that 
    preserves the link with the original project, yet both projects
    live independently.
    - A clone is a copy of a remote repository to the local machine
    - Branches are sets of commits that evolve independently
    until we explicitly merge two branches

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This allows Git to know how many steps (commits) we are ahead of 
    the remote. Also, when we want to push to or pull from the remote
    Git can check whether the common ancestor has changed on the remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    By making frequent local copies of the whole project and 
    assigning manually one and only-one developer per sub-project. 
    The merge procedure will be by copying by hand the requirered 
    directories and files, and if the compilation failed, then 
    we could use eamils or phone call to solve the issue.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
